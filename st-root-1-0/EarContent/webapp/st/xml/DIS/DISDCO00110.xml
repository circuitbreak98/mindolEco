<?xml version="1.0" encoding="utf-8"?>
<Window>
	<Form Height="600" Id="DISDCO00110" Left="8" OnLoadCompleted="DISDCO00110_OnLoadCompleted" PidAttrib="7" Title="상품입력(출고)" Top="8" Ver="1.0" Width="830" WorkArea="true">
		<Datasets>
			<Dataset DataSetType="Dataset" Id="ds_prod" OnColumnChanged="ds_prod_OnColumnChanged">
				<Contents>
					<colinfo id="prod_cl" size="256" summ="default" type="STRING"/>
					<colinfo id="mfact_id" size="256" summ="default" type="STRING"/>
					<colinfo id="prod_cd" size="256" summ="default" type="STRING"/>
					<colinfo id="color_cd" size="256" summ="default" type="STRING"/>
					<colinfo id="ser_num" size="256" summ="default" type="STRING"/>
					<colinfo id="bad_yn" size="256" summ="default" type="STRING"/>
					<colinfo id="dis_st" size="256" summ="default" type="STRING"/>
					<colinfo id="out_qty" size="256" summ="default" type="STRING"/>
					<colinfo id="out_qty_org" size="256" summ="default" type="STRING"/>
					<colinfo id="chk" size="256" summ="default" type="STRING"/>
					<colinfo id="edt_flg" size="256" summ="default" type="STRING"/>
					<colinfo id="bar_cd_typ" size="256" summ="default" type="STRING"/>
					<colinfo id="prod_cl_nm" size="256" summ="default" type="STRING"/>
					<colinfo id="mfact_nm" size="256" summ="default" type="STRING"/>
					<colinfo id="prod_nm" size="256" summ="default" type="STRING"/>
					<colinfo id="color_nm" size="256" summ="default" type="STRING"/>
					<colinfo id="dum_yn" size="256" summ="default" type="STRING"/>
					<colinfo id="fix_yn" size="256" summ="default" type="STRING"/>
					<colinfo id="in_qty" size="256" summ="default" type="STRING"/>
					<colinfo id="unit_prc" size="256" summ="default" type="STRING"/>
					<colinfo id="amt" size="256" summ="default" type="STRING"/>
					<colinfo id="prod_cd_color_cd" size="256" summ="default" type="STRING"/>
					<colinfo id="upd_cnt" size="256" summ="default" type="STRING"/>
				</Contents>
			</Dataset>
			<Dataset DataSetType="Dataset" Id="ds_prodCl"></Dataset>
			<Dataset DataSetType="Dataset" Id="ds_mfact"></Dataset>
			<Dataset DataSetType="Dataset" Id="ds_color"></Dataset>
			<Dataset DataSetType="Dataset" Id="ds_bad"></Dataset>
			<Dataset DataSetType="Dataset" Id="ds_disSt"></Dataset>
			<Dataset DataSetType="Dataset" Id="ds_in"></Dataset>
			<Dataset DataSetType="Dataset" Id="ds_prodColor"></Dataset>
			<Dataset DataSetType="Dataset" Id="ds_childPop"></Dataset>
			<Dataset DataSetType="Dataset" Id="ds_barInfo"></Dataset>
			<Dataset DataSetType="Dataset" Id="ds_retCnt"></Dataset>
			<Dataset DataSetType="Dataset" Id="ds_prodInfo"></Dataset>
			<Dataset DataSetType="Dataset" Id="ds_disProd"></Dataset>
			<Dataset DataSetType="Dataset" Id="ds_asIn"></Dataset>
			<Dataset DataSetType="Dataset" Id="ds_etcProdList"></Dataset>
			<Dataset DataSetType="Dataset" Id="ds_disProdList"></Dataset>
			<Dataset DataSetType="Dataset" Id="ds_barList"></Dataset>
		</Datasets>
		<Div Border="Raised" Height="40" Id="div_search" Left="10" Style="sty_div_input" TabOrder="1" Text="Div0" Top="10" Width="810">
			<Contents>
				<Image Align="Left" Height="20" Id="Image0" ImageID="bul_caution" Left="242" LeftMargin="20" Style="sty_lb_info" TabOrder="1" Text="일련번호&#32;입력은&#32;상품구분이&#32;단말기,USIM&#32;경우만&#32;입력&#32;가능함." Top="7" Width="328"></Image>
			</Contents>
		</Div>
		<Button Align="Left" ButtonStyle="TRUE" Cursor="HAND" Height="25" Id="btn_close" ImageID="btn_d_2" Left="761" LeftMargin="5" OnClick="btn_close_OnClick" Style="sty_btn_d" TabOrder="3" Text="닫기" Top="565" Width="60"></Button>
		<Button Align="Left" ButtonStyle="TRUE" Cursor="HAND" Height="25" Id="btn_confirm" ImageID="btn_c_2" Left="696" LeftMargin="5" OnClick="btn_confirm_OnClick" Style="sty_btn_c" TabOrder="2" Text="확인" Top="565" Width="60"></Button>
		<Div Height="21" Id="div_excel" Left="746" TabOrder="4" Text="Div2" Top="60" Width="77">
			<Contents>
				<Button Cursor="HAND" Height="21" Id="btn_addRow" ImageID="btn_i_add_w" Left="30" OnClick="div_excel_btn_addRow_OnClick" TabOrder="1" Text="Button1" ToolTipText="행추가" Width="19"></Button>
				<Button Cursor="HAND" Height="21" Id="btn_delRow" ImageID="btn_i_subtract_w" Left="55" OnClick="div_excel_btn_delRow_OnClick" TabOrder="2" Text="Button1" ToolTipText="추가된&#32;행삭제" Width="19"></Button>
			</Contents>
		</Div>
		<Grid AutoEnter="TRUE" AutoFit="TRUE" BindDataset="ds_prod" BkColor2="user32" BoldHead="true" Border="Flat" Bottom="549" Editable="TRUE" Enable="true" EndLineColor="default" FillArea="TRUE" HeadBorder="Flat" HeadHeight="22" Height="464" Id="grd_prod" InputPanel="FALSE" Left="10" LineColor="user33" MinWidth="100" OnChar="grd_prod_OnChar" OnEnterDown="grd_prod_OnEnterDown" OnExpandUp="grd_prod_OnExpandUp" OnHeadClick="grd_prod_OnHeadClick" Right="820" RowHeight="21" Style="sty_Grid" TabOrder="5" TabStop="true" Top="85" UseDBuff="true" UsePopupMenu="true" UseSelColor="true" Visible="true" VLineColor="user33" WheelScrollRow="1" Width="810">
			<contents>
				<format id="Default">
					<columns>
						<col width="30"/>
						<col width="62"/>
						<col width="85"/>
						<col width="133"/>
						<col width="103"/>
						<col width="107"/>
						<col width="92"/>
						<col width="65"/>
						<col width="65"/>
						<col width="65"/>
					</columns>
					<head>
						<cell bkcolor="user34" col="0" color="user35" display="checkbox" edit="checkbox"/>
						<cell bkcolor="user34" col="1" color="user35" display="text" text="번호"/>
						<cell bkcolor="user34" col="2" color="user35" display="text" text="상품구분"/>
						<cell bkcolor="user34" col="3" color="user35" display="text" text="제조사"/>
						<cell bkcolor="user34" col="4" color="user35" display="text" text="모델"/>
						<cell bkcolor="user34" col="5" color="user35" display="text" text="색상"/>
						<cell bkcolor="user34" col="6" color="user35" display="text" text="일련번호"/>
						<cell bkcolor="user34" col="7" color="user35" display="text" text="불량여부"/>
						<cell bkcolor="user34" col="8" color="user35" display="text" text="재고상태"/>
						<cell bkcolor="user34" col="9" color="user35" display="text" text="수량"/>
					</head>
					<body>
						<cell align="center" col="0" colid="chk" display="checkbox" edit="checkbox"/>
						<cell align="center" col="1" display="text" expr="currow+1"/>
						<cell align="center" col="2" colid="prod_cl" combocol="code" combodataset="ds_prodCl" combotext="value" display="combo" edit='expr:Iif(edt_flg==2,&#32;&quot;none&quot;,&#32;&quot;combo&quot;)' expandimage="btn_combo" expandshow="expr:decode(edt_flg,&apos;2&apos;,&apos;false&apos;,&apos;true&apos;)" expandsize="17"/>
						<cell col="3" colid="mfact_id" combocol="code" combodataset="ds_mfact" combodisplayrowcnt="10" combotext="value" display="combo" expandsize="0"/>
						<cell align="left" col="4" colid="prod_nm" display="text" edit='expr:Iif(prod_cl!=&quot;9&quot;&#32;||&#32;edt_flg==2,&#32;&quot;none&quot;,&#32;&quot;normal&quot;)' expandimage="btn_i_detail_b" expandshow='expr:Iif(prod_cl!=&quot;9&quot;&#32;||&#32;edt_flg==2,&#32;&quot;false&quot;,&#32;&quot;true&quot;)'/>
						<cell align="center" col="5" colid="color_cd" combocol="code" combodataset="ds_color" combodisplayrowcnt="10" combotext="value" display="combo" expandimage="btn_combo" expandsize="17" expr='Iif(prod_cl==9,&#32;&quot;99&quot;,&#32;color_cd)'/>
						<cell align="right" col="6" colid="ser_num" color="expr:decode(dum_yn,&apos;Y&apos;,&apos;red&apos;,&apos;defalut&apos;)" display="text" edit='expr:Iif(edt_flg==2||prod_cl==9,&#32;&quot;none&quot;,&#32;&quot;normal&quot;)' expr='Iif(prod_cl==&quot;9&quot;,&#32;&quot;&quot;,&#32;ser_num)' imemode="english" useime="false"/>
						<cell align="center" col="7" colid="bad_yn" combocol="code" combodataset="ds_bad" combotext="value" display="combo"/>
						<cell align="center" col="8" colid="dis_st" combocol="code" combodataset="ds_disSt" combotext="value" display="combo"/>
						<cell align="right" col="9" colid="out_qty" display="text" edit="expr:decode(prod_cl,&apos;9&apos;,decode(edt_flg,&apos;2&apos;,&apos;none&apos;,decode(prod_cd,null,&apos;none&apos;,&apos;number&apos;)),&apos;none&apos;)"/>
					</body>
				</format>
			</contents>
		</Grid>
	</Form>
	<Script><![CDATA[/*******************************************************************************
* 프로그램ID : DISDCO00110
* 업무명      :  재고관리 - 상품입력(출고)
* 프로그램명  : 상품입력(출고)
--------------------------------------------------------------------------------
* 작성자      : 김중일
* 작성일      : 2009.01.19
--------------------------------------------------------------------------------
* 1. 변경이력
수정자    :
수정일    :
수정 내역 :
*******************************************************************************/

//==============================================================================
// 공통 스크립트 로딩
//==============================================================================
#include "lib::lib_commF.js"
#include "lib::lib_commPopup.js"
#include "lib::lib_DIS.js"
 
//==============================================================================
// 폼 변수 정의
//==============================================================================
var FV_STR_DSID;  // 데이터셋 ID
var FV_OBJ_DS;    // 데이터셋 객체
var FV_SER_NUM;   // 일련번호
var FV_IN_OUT_CL; // 입고구분
var FV_CALL_FUNCTION; // 부모창 호출 함수명
var FV_APPLY_DT;  // 상품조회시 적용일.
/*******************************************************************************
 * @description    : 최초 폼 로드시 발생 - 이벤트
*******************************************************************************/
function DISDCO00110_OnLoadCompleted(obj)
{
    http.Sync = true;
	FV_OBJ_DS = Object("parent." + FV_STR_DSID);
		
	// 그리드 체크박스 설정 및 정렬
	cf_setGrdChecknSortEvent(grd_prod, 0);
	
	// 공통 코드 조회
	f_getCommCd("ds_prodCl", "ZBAS_C_00010");  // 상품구분
	f_getCommCd("ds_color", "ZBAS_C_00040");   // 색상
	f_getCommCd("ds_bad", "ZDIS_C_00090");     // 불량여부
	f_getCommCd("ds_disSt", "ZDIS_C_00100");   // 재고상태
	
	// 설정된 코드를 기반으로 공통 코드를 추가 및 데이타 바인딩
	cf_checkCommonCode();	

	// 입고구분 필터링 (구매입고/교품반환입고/교품입고/판매취소입고)	
	ds_prodCl.Filter("CODE == '1' || CODE == '2' || CODE == '9'");	

    // 제조사 리스트 조회
	f_getMfact();
	
	f_addRow();
	
	http.Sync = false;
}

/*******************************************************************************
 * @description    : 콜백
 * @param sSvcID   : 서비스 아이디
*******************************************************************************/
function f_callBack(sSvcID)
{	
    // 상품코드별 색상
    if(sSvcID == "svcProdColor")
    {
        if(ds_prodColor.rowcount > 0)
        {
            f_setProdColor();
        }
        else
        {
            ds_color.UnFilter();
        }
    }
    
    if(sSvcID == "svcBarDataSet"){   
	
		ds_prod.SetColumn(ds_prod.currow, "prod_cl", ds_barInfo.getColumn(0, "prod_cl"));
		ds_prod.SetColumn(ds_prod.currow, "prod_cd", ds_barInfo.getColumn(0, "prod_cd"));
		ds_prod.SetColumn(ds_prod.currow, "color_cd", ds_barInfo.getColumn(0, "color_cd"));
		ds_prod.SetColumn(ds_prod.currow, "ser_num", ds_barInfo.getColumn(0, "ser_num"));
		
		f_getProdList();
    }
    
    // 상품 정보
    if(sSvcID == "svcProdInfo")
    {
        if(ds_prodInfo.colcount > 0)
	    {
            if(f_checkProdInfo())
            {
                ds_prod.SetColumn(ds_prod.currow, "bar_cd_typ", ds_prodInfo.getColumn(0, "bar_cd_typ"));
                
                if(Length(ds_prod.GetColumn(ds_prod.currow, "ser_num")) > 8)
                {
                    f_getBarInfo();
                }
                else
                {
					switch(FV_IN_OUT_CL)
					{
						case "101":  // 구매입고
						case "102":  // 교품입고
							f_getDisProd();
							break;
						case "103":  // AS입고
						case "109":  // 교품반환입고
							f_getAsIn();
					}
                }
            }
            else
            {
                return;
            }
		}
		else
		{
			// 등록되지 않은 상품입니다.;
			alert(MSG_00125);
	        grd_prod.SetFocus();
		    grd_prod.SetCellPos(4);
		    return;
		}
    }
    
    // 바코드 정보
    if(sSvcID == "svcBarInfo")
    {
        if(f_checkBarInfo())
	    {
			switch(FV_IN_OUT_CL)
			{
				case "101":  // 구매입고
				case "102":  // 교품입고
					f_getDisProd();
					break;
				case "103":  // AS입고
				case "109":  // 교품반환입고
					f_getAsIn();
			}
		}
    }
    
    // 결과 확인
	if(sSvcID == "svcRetConfirm")
	{
		switch(FV_IN_OUT_CL)
		{
			case "101":  // 구매입고
			case "102":  // 교품입고
				if(ds_disProd.colcount > 0)
				{
					// 이미 등록된 상품이 존재합니다.
					alert(MSG_00126);
					grd_prod.SetFocus();
					grd_prod.SetCellPos(6);
					return;
				}
				else
				{
					f_setAddedRow();
				}
				break;
			case "103":  // AS입고
				if(ds_asIn.colcount < 1)
				{
					// AS입고에 해당하는 상품이 아닙니다.
					alert(cf_getMessage(MSG_00127, "AS입고")); 
					
					grd_prod.SetFocus();
					grd_prod.SetCellPos(6);
					return;
				}
				else
				{
					f_setAddedRow();
				}
				break;
			case "109":  // 교품반환입고
				if(ds_asIn.colcount < 1)
				{
					// 교품반환입고에 해당하는 상품이 아닙니다.
					alert(cf_getMessage(MSG_00127, "교품반환입고")); 					
					grd_prod.SetFocus();
					grd_prod.SetCellPos(6);
					return;
				}
				else
				{
					f_setAddedRow();
				}	
		}

	}
	
    if(sSvcID == "svcProdList")
    {
        if(ds_disProdList.rowcount == 1)
	    {
	        var oDs = ds_disProdList;
	        
			ds_prod.SetColumn(ds_prod.currow, "prod_cl", oDs.GetColumn(0, "prod_cl"));
			ds_prod.SetColumn(ds_prod.currow, "prod_cl_nm", oDs.GetColumn(0, "prod_cl_nm"));
			ds_prod.SetColumn(ds_prod.currow, "mfact_id", oDs.GetColumn(0, "mfact_id"));
			ds_prod.SetColumn(ds_prod.currow, "mfact_nm", oDs.GetColumn(0, "mfact_nm"));
			ds_prod.SetColumn(ds_prod.currow, "prod_cd", oDs.GetColumn(0, "prod_cd"));
			ds_prod.SetColumn(ds_prod.currow, "prod_nm", oDs.GetColumn(0, "prod_nm"));
			ds_prod.SetColumn(ds_prod.currow, "color_cd", oDs.GetColumn(0, "color_cd"));
			ds_prod.SetColumn(ds_prod.currow, "ser_num", oDs.GetColumn(0, "ser_num"));
			ds_prod.SetColumn(ds_prod.currow, "bad_yn", oDs.GetColumn(0, "bad_yn"));
			ds_prod.SetColumn(ds_prod.currow, "dis_st", oDs.GetColumn(0, "dis_st"));
			ds_prod.SetColumn(ds_prod.currow, "rmks", oDs.GetColumn(0, "rmks"));
			ds_prod.SetColumn(ds_prod.currow, "amt", oDs.GetColumn(0, "fix_crdt_prchs_prc"));
			ds_prod.SetColumn(ds_prod.currow, "unit_prc", oDs.GetColumn(0, "fix_crdt_prchs_prc"));
			ds_prod.SetColumn(ds_prod.currow, "upd_cnt", oDs.GetColumn(0, "upd_cnt"));
			ds_prod.SetColumn(ds_prod.currow, "out_qty", "1");
			ds_prod.SetColumn(ds_prod.currow, "out_qty_org", "0");
			ds_prod.SetColumn(ds_prod.currow, "prod_cd_color_cd", oDs.GetColumn(0, "prod_cd")+oDs.GetColumn(0, "color_cd"));		
			
			f_setAddedRow();
		}
		else if(ds_disProdList.rowcount > 1)
		{
		    var sRet = Dialog("DIS::DISDTR00320.xml", "");
		    if(sRet == 0)
		    {
                f_setAddedRow();
		    }
		}
		else
		{
			alert("입력된 일련번호로 등록된 상품이 존재하지 않습니다.");
			cf_setParam(ds_barInfo, "cont_yn", "N");
	        grd_prod.SetFocus();
		    grd_prod.SetCellPos(6);
		    return;
		}
    }	
    
    // 바코드 정보
    if(sSvcID == "svcBarList")
    {		
        if(ds_barList.rowcount == 1)
        {
			var oDs = ds_barList;
			
			cf_setParam(ds_barInfo, "prod_cl", oDs.GetColumn(0, "prod_cl"));
			cf_setParam(ds_barInfo, "bar_cd_typ", oDs.GetColumn(0, "bar_cd_typ"));
			cf_setParam(ds_barInfo, "all_len_num", oDs.GetColumn(0, "all_len_num"));
			cf_setParam(ds_barInfo, "mdl_sta_len", oDs.GetColumn(0, "mdl_sta_len"));
			cf_setParam(ds_barInfo, "mdl_end_len", oDs.GetColumn(0, "mdl_end_len"));
			cf_setParam(ds_barInfo, "mdl_len_num", oDs.GetColumn(0, "mdl_len_num"));
			cf_setParam(ds_barInfo, "color_sta_len", oDs.GetColumn(0, "color_sta_len"));
			cf_setParam(ds_barInfo, "color_end_len", oDs.GetColumn(0, "color_end_len"));
			cf_setParam(ds_barInfo, "color_len_num", oDs.GetColumn(0, "color_len_num"));
			cf_setParam(ds_barInfo, "ser_num_sta_len", oDs.GetColumn(0, "ser_num_sta_len"));
			cf_setParam(ds_barInfo, "ser_num_end_len", oDs.GetColumn(0, "ser_num_end_len"));
			cf_setParam(ds_barInfo, "ser_num_len_num", oDs.GetColumn(0, "ser_num_len_num"));

            f_setBarInfo();
        } 
        else if(ds_barList.rowcount > 1)
        {
            var sRet;
            if(ds_barInfo.GetColumn(0, "cont_yn") != "Y")
            {
                sRet = Dialog("DIS::DISDTR00330.xml", "");
            }
            else
            {
                sRet = 0;
            }

            if(sRet == 0)
            {
                f_setBarInfo();
            }
        }
        else
        {
            alert(cf_getMessage(MSG_00013, "입력된 바코드 정보가"));
            cf_setParam(ds_barInfo, "cont_yn", "N");
			grd_prod.SetFocus();
			grd_prod.SetCellPos(6);
			return false;
        }

    }    

}

/*******************************************************************************
 * @description    : 기본값 셋팅
*******************************************************************************/
function f_setDefault(sDsID)
{
    Object(sDsID).InsertRow(0);
    Object(sDsID).SetColumn(0, "code", "");
    Object(sDsID).SetColumn(0, "value", "선택");
}

/*******************************************************************************
 * @description    : 공통 코드 조회
 * @param sOutDsID : 출력 데이터셋 아이디
 *        sCommCd  : 공통 코드
*******************************************************************************/
function f_getCommCd(sOutDsID, sCommCd)
{
    // 입력 파라메터 셋팅
    ds_in.ClearData();
    cf_setParam(ds_in, "comm_cd_id", sCommCd);
    
	// 트랜잭션 설정
	var sSvcID = sOutDsID;
	var sInDs = "nc_input_fieldDs=ds_in";
	var sOutDs = sOutDsID + "=CommList";
	var sArg = "sktst.dis.DCO#getCommList";
	
	// 공통 트랜잭션 호출
	cf_Transaction(sSvcID, sInDs, sOutDs, sArg);
}

/*******************************************************************************
 * @description    : 제조사 리스트 조회
*******************************************************************************/
function f_getMfact()
{
    // 입력 파라메터 셋팅
    ds_in.ClearData();
    ds_mfact.ClearData();
    cf_setParam(ds_in, "deal_co_cl", "20"); 
    
	// 트랜잭션 설정
	var sSvcID = "ds_mfact";
	var sInDs = "nc_input_fieldDs=ds_in";
	var sOutDs = "ds_mfact=DealCoList";
	var sArg = "sktst.dis.DCO#getDealCoList";
	
	// 공통 트랜잭션 호출
	cf_Transaction(sSvcID, sInDs, sOutDs, sArg);
}

/*******************************************************************************
 * @description    : 상품코드별 색상 리스트 조회
   @param sProdCd  : 상품코드
*******************************************************************************/
function f_getProdColor(sProdCd)
{
    grd_prod.SetCellProp("Body", 5, "edit", "none");
    
    // 입력 파라메터 셋팅
    ds_in.ClearData();
    ds_prodColor.ClearData();
    cf_setParam(ds_in, "prod_cd", sProdCd);
    
	// 트랜잭션 설정
	var sSvcID = "svcProdColor";
	var sInDs = "nc_input_fieldDs=ds_in";
	var sOutDs = "ds_prodColor=ProdColorList";
	var sArg = "sktst.dis.DCO#getProdColorList";
	
	// 공통 트랜잭션 호출
	cf_Transaction(sSvcID, sInDs, sOutDs, sArg);
}

/*******************************************************************************
 * @description    : 바코드 정보 조회
*******************************************************************************/
function f_getBarInfo()
{
    // 입력 파라메터 셋팅
    ds_in.ClearData();
    ds_barInfo.ClearData();
    cf_setParam(ds_in, "prod_cl", ds_prod.GetColumn(ds_prod.currow, "prod_cl"));
    cf_setParam(ds_in, "bar_cd_typ", ds_prod.GetColumn(ds_prod.currow, "bar_cd_typ"));
  
	// 트랜잭션 설정
	var sSvcID = "svcBarInfo";
	var sInDs = "nc_input_fieldDs=ds_in";
	var sOutDs = "ds_barInfo=nc_output_fieldDs";
	var sArg = "sktst.dis.DCO#getBarInfo";
	
	// 공통 트랜잭션 호출
	cf_Transaction(sSvcID, sInDs, sOutDs, sArg);
}

/*******************************************************************************
 * @description    : 구매 입고, 교품 입고 등록 조회
*******************************************************************************/
function f_getDisProd()
{
    // 입력 파라메터 셋팅
    ds_in.ClearData();
    ds_disProd.ClearData();
    cf_setParam(ds_in, "prod_cd", ds_prod.GetColumn(ds_prod.currow, "prod_cd"));
    cf_setParam(ds_in, "color_cd", ds_prod.GetColumn(ds_prod.currow, "color_cd"));
    cf_setParam(ds_in, "ser_num", FV_SER_NUM);
  
	// 트랜잭션 설정
	var sSvcID = "svcRetConfirm";
	var sInDs = "nc_input_fieldDs=ds_in";
	var sOutDs = "ds_disProd=nc_output_fieldDs";
	var sArg = "sktst.dis.DCO#getDisProd";
	
	// 공통 트랜잭션 호출
	cf_Transaction(sSvcID, sInDs, sOutDs, sArg);
}

/*******************************************************************************
 * @description    : AS 입고 등록 조회
*******************************************************************************/
function f_getAsIn()
{
    // 입력 파라메터 셋팅
    ds_in.ClearData();
    ds_asIn.ClearData();
    cf_setParam(ds_in, "prod_cd", ds_prod.GetColumn(ds_prod.currow, "prod_cd"));
    cf_setParam(ds_in, "color_cd", ds_prod.GetColumn(ds_prod.currow, "color_cd"));
    cf_setParam(ds_in, "ser_num", FV_SER_NUM);
  
	// 트랜잭션 설정
	var sSvcID = "svcRetConfirm";
	var sInDs = "nc_input_fieldDs=ds_in";
	var sOutDs = "ds_asIn=nc_output_fieldDs";
	var sArg = "sktst.dis.DCO#getAsIn";
	
	// 공통 트랜잭션 호출
	cf_Transaction(sSvcID, sInDs, sOutDs, sArg);
}

/*******************************************************************************
 * @description    : 결과 카운트 조회
*******************************************************************************/
function f_getRetCnt(sDealNm)
{
    // 입력 파라메터 셋팅
    ds_in.ClearData();
    ds_retCnt.ClearData();
    cf_setParam(ds_in, "prod_cd", ds_prod.GetColumn(ds_prod.currow, "prod_cd"));
    cf_setParam(ds_in, "color_cd", ds_prod.GetColumn(ds_prod.currow, "color_cd"));
    cf_setParam(ds_in, "ser_num", FV_SER_NUM);
  
	// 트랜잭션 설정
	var sSvcID = "svcRetCnt";
	var sInDs = "nc_input_fieldDs=ds_in";
	var sOutDs = "ds_retCnt=nc_output_fieldDs";
	var sArg = sDealNm;
	
	// 공통 트랜잭션 호출
	cf_Transaction(sSvcID, sInDs, sOutDs, sArg);
}

/*******************************************************************************
 * @description    : 검증 완료된 행에 대한 기본 값 셋팅 및 행 추가
*******************************************************************************/
function f_setAddedRow()
{
    if(!f_checkSerNum(ds_prod.GetColumn(ds_prod.rowcount-1, "ser_num"),ds_prod.GetColumn(ds_prod.rowcount-1, "prod_cd"))) return;
    
	ds_prod.SetColumn(ds_prod.currow, "edt_flg", "2");
	
	f_addRow();

	//ds_prod.SetColumn(ds_prod.currow, "prod_cl", ds_prod.GetColumn(ds_prod.currow-1, "prod_cl"));
	//ds_prod.SetColumn(ds_prod.currow, "bar_cd_typ", ds_prod.GetColumn(ds_prod.currow-1, "bar_cd_typ"));
	
	grd_prod.SetFocus();
	grd_prod.SetCellPos(6);

}

/*******************************************************************************
 * @description    : 상품코드별 색상 필터링
*******************************************************************************/
function f_setProdColor()
{
	var sFilterStr = "code = ''";

	for(var i=0; i<ds_prodColor.rowcount; i++)
	{
		sFilterStr += " || code = '" + ds_prodColor.GetColumn(i, "color_cd") + "'"; 
	}

	ds_color.Filter(sFilterStr);
}

/*******************************************************************************
 * @description    : 기본 값 유효성 체크
*******************************************************************************/
function f_checkDefault()
{
	if(ds_prod.GetColumn(ds_prod.currow, "prod_cl") == "9" ){
	
		if(Length(ds_prod.GetColumn(ds_prod.currow, "prod_cd")) < 1)
		{
			alert(cf_getMessage(MSG_00083, "모델"));
			grd_prod.SetFocus();
			grd_prod.SetCellPos(4);
			return false;
		}
		
		if(Length(ds_prod.GetColumn(ds_prod.currow, "prod_cl")) < 1)
		{
			alert(cf_getMessage(MSG_00083, "상품구분"));
			grd_prod.SetFocus();
			grd_prod.SetCellPos(2);
			return false;
		}
		
		if(Length(ds_prod.GetColumn(ds_prod.currow, "mfact_id")) < 1)
		{
			alert(cf_getMessage(MSG_00083, "제조사"));
			grd_prod.SetFocus();
			grd_prod.SetCellPos(3);
			return false;
		}
		
		if(Length(ds_prod.GetColumn(ds_prod.currow, "color_cd")) < 1)
		{
			alert(cf_getMessage(MSG_00083, "색상"));
			grd_prod.SetFocus();
			grd_prod.SetCellPos(5);
			return false;
		}
		
		if(Length(ds_prod.GetColumn(ds_prod.currow, "out_qty")) < 1)
		{
			alert(cf_getMessage(MSG_00083, "수량"));
			grd_prod.SetFocus();
			grd_prod.SetCellPos(9);
			return false;
		}		
    } 

    return true;
}

/*******************************************************************************
 * @description    : 상폼 정보 유효성 체크
*******************************************************************************/
function f_checkProdInfo()
{   
    if(ds_prod.GetColumn(ds_prod.currow, "prod_cd") != ds_prodInfo.GetColumn(0, "prod_cd"))
    {
        alert("입력된 모델 코드가 등록되어 있는 정보와 일치하지 않습니다.");
        grd_prod.SetFocus();
	    grd_prod.SetCellPos(4);
        return false;
    }
    
    if(ds_prod.GetColumn(ds_prod.currow, "prod_cl") != ds_prodInfo.GetColumn(0, "prod_cl"))
    {
        alert("입력된 상품구분이 등록되어 있는 정보와 일치하지 않습니다.");
        grd_prod.SetFocus();
	    grd_prod.SetCellPos(2);
        return false;
    }
    
    if(ds_prod.GetColumn(ds_prod.currow, "mfact_id") != ds_prodInfo.GetColumn(0, "mfact_id"))
    {
        alert("입력된 제조사가 등록되어 있는 정보와 일치하지 않습니다.");
        grd_prod.SetFocus();
	    grd_prod.SetCellPos(3);
        return false;
    }
    return true;
}

/*******************************************************************************
 * @description    : 바코드 정보 유효성 체크
*******************************************************************************/
function f_checkBarInfo()
{      
    if(ds_barInfo.rowcount < 1)
    {
        alert("입력된 바코드 정보가 등록되어 있지 않습니다.");
        grd_prod.SetFocus();
        grd_prod.SetCellPos(6);
        return false;
    }

    if(ds_barInfo.GetColumn(0, "all_len_num") != Length(ds_prod.GetColumn(ds_prod.currow, "ser_num")))
    {
        alert("입력된 바코드 정보가 등록되어 있는 정보와 일치하지 않습니다.");
        grd_prod.SetFocus();
        grd_prod.SetCellPos(6);
        return false;
    }

    FV_SER_NUM = "";
    var sProdBarCd = ds_prod.GetColumn(ds_prod.currow, "ser_num");
    var sProdMdl = ds_prod.GetColumn(ds_prod.currow, "prod_cd");
    var sProdCol = ds_prod.GetColumn(ds_prod.currow, "color_cd");
    var nBarMdlSta = ToNumber(ds_barInfo.GetColumn(0, "mdl_sta_len"));
    var nBarMdlLen = ToNumber(ds_barInfo.GetColumn(0, "mdl_len_num"));
    var nBarColSta = ToNumber(ds_barInfo.GetColumn(0, "color_sta_len"));
    var nBarColLen = ToNumber(ds_barInfo.GetColumn(0, "color_len_num"));
    var nBarSerSta = ToNumber(ds_barInfo.GetColumn(0, "ser_num_sta_len"));
    var nBarSerLen = ToNumber(ds_barInfo.GetColumn(0, "ser_num_len_num"));
    var sBarMdl = Iif(nBarMdlLen < 1, "", SubStr(sProdBarCd, nBarMdlSta-1, nBarMdlLen));
    var sBarCol = Iif(nBarColLen < 1, "", SubStr(sProdBarCd, nBarColSta-1, nBarColLen));
    var sBarSer = Iif(nBarSerLen < 1, "", SubStr(sProdBarCd, nBarSerSta-1, nBarSerLen));
    
    // 일련번호 중복 체크
    if(!f_checkSerNum(sBarSer, sBarMdl)) return false;

    if(sProdMdl != sBarMdl)
    {
        alert("모델코드가 바코드 정보와 일치하지 않습니다.");
        grd_prod.SetFocus();
        grd_prod.SetCellPos(6);
        return false;
    }

    if(sProdCol != sBarCol)
    {
        alert("색상코드가 바코드 정보와 일치하지 않습니다.");
        grd_prod.SetFocus();
        grd_prod.SetCellPos(6);
        return false;
    }
    
    FV_SER_NUM = sBarSer;
    
    return true;
}

/*******************************************************************************
 * @description    : 행을 추가한다.
*******************************************************************************/
function f_addRow()
{
	ds_prod.AddRow();
	ds_prod.SetColumn(ds_prod.currow, "fix_yn", "N");
	grd_prod.SetFocus();
	grd_prod.SetCellPos(6);
}

/*******************************************************************************
 * @description    : 다이얼로그 팝업 창을 띄워서 검색된 값을 받는다.
*******************************************************************************/
function f_dialogPop(nRow, nCell)
{
	if(nCell == "4" ){

		var bCloseYn = Dialog("DIS::DISDTR00340.xml", 
			"FV_STR_PLC_ID="+parent.div_process.edt_outPlcID.Value
		   +" FV_APLY_DT="+parent.div_process.cal_outSchdDt.Value);
		
		if(!bCloseYn){
		
			ds_prod.SetColumn(nRow, "prod_cd_color_cd",ds_prod.GetColumn(nRow, "prod_cd")+ds_prod.GetColumn(nRow, "color_cd"));
			ds_prod.SetColumn(nRow, "out_qty_org","0");
		}
	}
}

/*******************************************************************************
 * @description    : 중복된 일련번호를 체크한다.
 * @param sSerNum  : 비교할 일련번호
*******************************************************************************/
function f_checkSerNum(sSerNum, sProdCd)
{
	for(var i=0; i<ds_prod.rowcount-1; i++)
	{
		if( (sSerNum+sProdCd) == (ds_prod.GetColumn(i, "ser_num")+ds_prod.GetColumn(i, "prod_cd")))
		{
			alert((i+1) + " 번 행에 중복된 일련번호가 있습니다.");
			grd_prod.SetFocus();
			grd_prod.SetCellPos(6);
			ds_prod.SetColumn(grd_prod.CurrentRow, "bad_yn",null);
			ds_prod.SetColumn(grd_prod.CurrentRow, "dis_st",null);
			ds_prod.SetColumn(grd_prod.CurrentRow, "out_qty",null);
			ds_prod.SetColumn(grd_prod.CurrentRow, "prod_cd",null);
			ds_prod.SetColumn(grd_prod.CurrentRow, "prod_nm",null);
			ds_prod.SetColumn(grd_prod.CurrentRow, "color_cd",null);
			ds_prod.SetColumn(grd_prod.CurrentRow, "mfact_nm",null);
			ds_prod.SetColumn(grd_prod.CurrentRow, "mfact_id",null);
			ds_prod.SetColumn(grd_prod.CurrentRow, "prod_cl",null);
			
			return false; 
		}
	}
	
	FV_SER_NUM = sSerNum;
	return true;
}
	
/*******************************************************************************
 * @description    : 현재 창 닫기
*******************************************************************************/
function btn_close_OnClick(obj)
{
	this.close();
}

/*******************************************************************************
 * @description    : 플러스 버튼 클릭 이벤트 (행 검증 및 새로운 행 추가)
*******************************************************************************/
function div_excel_btn_addRow_OnClick(obj)
{
    if(ds_prod.rowcount < 1)
    {
        f_addRow();
		
		ds_prod.SetColumn(ds_prod.currow, "prod_cl", "9");
		ds_prod.SetColumn(ds_prod.currow, "color_cd", "99");
		
		grd_prod.SetFocus();
		grd_prod.SetCellPos(4);
		
		return false;
    }
  
    if(!f_checkDefault()) return false;
    
    if(ds_prod.GetColumn(ds_prod.currow, "prod_cl") == "9" || ds_prod.GetColumn(ds_prod.currow, "edt_flg") == "2")
    {        
		if(ds_prod.GetColumn(ds_prod.currow, "prod_cl") != "9")
		{
			ds_prod.SetColumn(ds_prod.currow, "bad_yn", "01");
			ds_prod.SetColumn(ds_prod.currow, "dis_st", "01");			
			ds_prod.SetColumn(ds_prod.currow, "out_qty", "1");
		}else{
		
			if(ds_prod.GetColumn(ds_prod.currow, "out_qty") == "0"){
				alert("수량을 입력하세요.");
				grd_prod.SetFocus();
				grd_prod.SetCellPos(9);				
				return;
			}
		}

		ds_prod.SetColumn(ds_prod.currow, "edt_flg", "2");
		
        f_addRow();

		ds_prod.SetColumn(ds_prod.currow, "prod_cl", "9");
		grd_prod.SetFocus();
		grd_prod.SetCellPos(4);
		
    } 
    else
    {
//		if(Length(ds_prod.GetColumn(ds_prod.currow, "ser_num")) < 9)
//      단말기 고도화 수정
//		if(Length(ds_prod.GetColumn(ds_prod.currow, "ser_num")) < 12) 		{
	/*
	 * 상품코드가 IPad 인경우 자릿수가 12 자리
	 */
	 if( Length(ds_prod.GetColumn(ds_prod.currow, "ser_num")) < 12 
	|| (Length(ds_prod.GetColumn(ds_prod.currow, "ser_num")) == 12 && ds_prod.GetColumn(ds_prod.currow, "bar_cd_typ") == "5")){
			FV_SER_NUM = ds_prod.GetColumn(ds_prod.currow, "ser_num");
			f_getProdList();
		}
		else
		{
            f_getBarList();
        }
    }

}

/*******************************************************************************
 * @description    : 마이너스 버튼 클릭 이벤트 (행 삭제)
*******************************************************************************/
function div_excel_btn_delRow_OnClick(obj)
{
    ds_prod.DeleteRow(ds_prod.currow);
	for(var i=0; i<ds_prod.rowcount; i++)
	{
	    if(ds_prod.GetColumn(i, "chk") == "1")
	    {
	        ds_prod.DeleteRow(i);
	        i--;
	    }
	}
}

/*******************************************************************************
 * @description    : 그리드 익스펜드 클릭
*******************************************************************************/
function grd_prod_OnExpandUp(obj,nRow,nCell,strVal,nPivotIndex)
{
    f_dialogPop(nRow, nCell);
}

/*******************************************************************************
 * @description    : 그리드 엔터키 다운
*******************************************************************************/
function grd_prod_OnEnterDown(obj,nRow,nCell,strVal,nPivotIndex)
{
    ds_prod.row = ds_prod.rowcount-1;
    
    // 바코드 길이를 비교하여 연속입력 결정
    if(ds_barInfo.GetColumn(0, "all_len_num") != Length(ds_prod.GetColumn(ds_prod.currow, "ser_num")))
	{
		cf_setParam(ds_barInfo, "cont_yn", "N");
	}
    
    if(nCell == 4)
    {   
		// 상품명 대문자로 변경.
		ds_prod.SetColumn(ds_prod.currow,"prod_nm"
			,ToUpper(ds_prod.GetColumn(ds_prod.currow,"prod_nm")));    
    
		// 상품정보 팝업
		if(grd_prod.GetCellProp("Body", 4, "edit") != "none")
		{
	        f_dialogPop(nRow,4);
	    }
	}
	else if(nCell == 6)
	{ 
	
		// 대문자로 변경.
		ds_prod.SetColumn(ds_prod.currow,"ser_num"
			,ToUpper(ds_prod.GetColumn(ds_prod.currow,"ser_num")));   
				
		if(ds_prod.GetColumn(ds_prod.currow, "prod_cl") != "9" 
				&& Length(ds_prod.GetColumn(ds_prod.currow, "ser_num")) < 7)
		{
			alert("일련번호가 바르게 입력되지 않았습니다.");
			cf_setParam(ds_barInfo, "cont_yn", "N");
			grd_prod.SetFocus();
			grd_prod.SetCellPos(6);
			return false;
		}

//		if(Length(ds_prod.GetColumn(ds_prod.currow, "ser_num")) < 9)
//    단말기 고도화 수정
//		if(Length(ds_prod.GetColumn(ds_prod.currow, "ser_num")) < 12)		{ // 일련번호 처리
	/*
	 * 상품코드가 IPad 인경우 자릿수가 12 자리
	 */
	 if( Length(ds_prod.GetColumn(ds_prod.currow, "ser_num")) < 12 
	|| (Length(ds_prod.GetColumn(ds_prod.currow, "ser_num")) == 12 && ds_prod.GetColumn(ds_prod.currow, "bar_cd_typ") == "5")){
			f_getProdList();
		}
		else
		{ // 바코드 처리
			f_getBarList();
		}
	}
}

/*******************************************************************************
 * @description    : 확인 버튼 클릭
*******************************************************************************/
function btn_confirm_OnClick(obj)
{
	// validation check
	var iLastRowNum = ds_prod.GetLastRow();
	
	if(uf_IsNull(ds_prod.GetColumn(iLastRowNum,"prod_cl"))){
		alert((iLastRowNum+1)+"번째 라인의 상품구분은 필수입니다.");
		return;
	}
			
	if(uf_IsNull(ds_prod.GetColumn(iLastRowNum,"mfact_id"))){
	
		alert((iLastRowNum+1)+"번째 라인의 제조사는 필수입니다.");
		return;
		
	}else if(uf_IsNull(ds_prod.GetColumn(iLastRowNum,"prod_cd"))){
	
		alert((iLastRowNum+1)+"번째 라인의 모델은 필수입니다.");
		return;
		
	}else if(uf_IsNull(ds_prod.GetColumn(iLastRowNum,"color_cd"))){
	
		alert((iLastRowNum+1)+"번째 라인의 색상은 필수입니다.");
		return;
		
	}
	
	if(ds_prod.GetColumn(iLastRowNum,"prod_cl") != "9"){
	
		// 상품구분이 기타상품 아닌 경우
	
		if(uf_IsNull(ds_prod.GetColumn(iLastRowNum,"ser_num"))){
		
			alert((iLastRowNum+1)+"번째 라인의 일련번호는 필수입니다.");
			return;
			
		}else if(uf_IsNull(ds_prod.GetColumn(iLastRowNum,"dis_st"))){
		
			alert((iLastRowNum+1)+"번째 라인의 일련번호의 재고상태가 조회 되지 않았습니다. \n\n일련번호 셀에서 enter키를 눌러 재고상태를 조회하세요.");
			return;
			
		}else if(ds_prod.GetColumn(iLastRowNum,"bad_yn") == "Y" ){
		
			alert((iLastRowNum+1)+"번째 라인의 상품이 불량이므로 처리할 수 없습니다.");
			return;
			
		}else if(ds_prod.GetColumn(iLastRowNum,"dis_st") == "02" ){
		
			alert((iLastRowNum+1)+"번째 라인의 상품재고상태가 비가용이므로 처리할 수 없습니다.");
			return;
			
		}			
	}
	
	if(uf_IsNull(ds_prod.GetColumn(iLastRowNum,"out_qty")) || ds_prod.GetColumn(iLastRowNum,"out_qty") == "0" ){
	
		alert((iLastRowNum+1)+"번째 라인의 수량은 필수입니다.");
		return;
		
	}		
	
	var iDuplicationCnt = 0;
	
	// 일련번호 중복을 체크한다.
	for(var i = 0 ; i < ds_prod.GetRowCount() ; i++ ){
	
		// 일련번호 있는 상품.
		if(ds_prod.GetColumn(i,"prod_cl") != '3'){		
	
			FV_OBJ_DS.Filter("prod_cl='"+ds_prod.GetColumn(i,"prod_cl")+"'&&color_cd='"+ds_prod.GetColumn(i,"color_cd")
			+"'&&prod_cd=='"+ds_prod.GetColumn(i,"prod_cd")+"'&&ser_num=='"+ds_prod.GetColumn(i,"ser_num")+"'");
			
			if(FV_OBJ_DS.GetRowCount() > 0 ){		
		
				ds_prod.SetColumn(i,"dum_yn","Y");
				iDuplicationCnt++;
			}else{
				ds_prod.SetColumn(i,"dum_yn","N");
			}
			
		}else{
			ds_prod.SetColumn(i,"dum_yn","N");
		}
		
		//코드명 셋팅.
        ds_prod.SetColumn(i, "prod_cl_nm", grd_prod.GetCellText("Body", i, 2));
        ds_prod.SetColumn(i, "mfact_nm", grd_prod.GetCellText("Body", i, 3));
        ds_prod.SetColumn(i, "color_nm", grd_prod.GetCellText("Body", i, 5));			
	}
		
	FV_OBJ_DS.UnFilter();

	if(iDuplicationCnt > 0){
	
		if(!confirm("이미 출고예정대상으로 선택된 일련번호가 존재합니다. \n\n중복된 일련번호를 제외하고 처리하시겠습니까?")){
			return;
		}		
		
	}
	
	var iFirstRow = 0;
	
	// 동일한 기타 상품을 합친다.
	for(var i = 0 ; i < ds_prod.GetRowCount() ; i++ ){
	
		// 기타상품
		if(ds_prod.GetColumn(i,"prod_cl") == "9"){
		
			// 동일한 기타상품중 첫번째 라인을 구한다.
			iFirstRow = ds_prod.FindRow("prod_cd_color_cd",ds_prod.GetColumn(i,"prod_cd_color_cd"));
			
			for(var j = ds_prod.GetRowCount()-1 ; j >= 0 ; j-- ){
			
				if( j != iFirstRow && ds_prod.GetColumn(i,"prod_cd_color_cd") == ds_prod.GetColumn(j,"prod_cd_color_cd") ){
					
					var iFirstOutQty   = toNumber(ds_prod.GetColumn(iFirstRow,"out_qty"));
					var iCurrowOutQty  = toNumber(ds_prod.GetColumn(j,"out_qty"));
					
					ds_prod.SetColumn(iFirstRow,"out_qty",iFirstOutQty+iCurrowOutQty);
					ds_prod.DeleteRow(j);
				}
			}
		}
	}
	
	// 기타상품 전체의 카운트를 구하여 체크한다.
	for(var i = 0 ; i < ds_prod.GetRowCount() ; i++ ){
	
		if(ds_prod.GetColumn(i,"prod_cl") == "9"){
			
			var iParentRow = FV_OBJ_DS.FindRow("prod_cd_color_cd",ds_prod.GetColumn(i,"prod_cd_color_cd"));
			
			if(iParentRow != -1){
				
				var iParentOutQty = toNumber(FV_OBJ_DS.GetColumn(iParentRow,"out_qty"));
				var iCurrowOutQty = toNumber(ds_prod.GetColumn(i,"out_qty"));
				var iFixOutQty    = toNumber(ds_prod.GetColumn(i,"in_qty"));  // 현재고
				
				if( iParentOutQty + iCurrowOutQty > iFixOutQty){
					alert((i+1)+"번째 라인의 "+ds_prod.GetColumn(i,"prod_nm")+" 수량["+iCurrowOutQty+"]과 이미 출고예정으로 선택된 수량["+iParentOutQty+"]의 합이 현재고["+iFixOutQty+"] 보다 큽니다. ");
					return;
				}
			}
		}
	}
	
	ds_prod.Filter("dum_yn='N'");
	sf_copyDataSet(FV_OBJ_DS, ds_prod, "OUT");
	
	eval("parent."+FV_CALL_FUNCTION+"()");
	this.Close();

}

/*******************************************************************************
 * @description    : 데이터셋 변경 이벤트
*******************************************************************************/
function ds_prod_OnColumnChanged(obj,nRow,strColumnID,varOldValue,varNewValue,nPivotIndex)
{
	if(strColumnID == "prod_cl" )
    {        
        obj.SetColumn(nRow, "prod_cd" ,null);
        obj.SetColumn(nRow, "prod_nm" ,null);
        obj.SetColumn(nRow, "mfact_id" ,null);
        obj.SetColumn(nRow, "mfact_nm" ,null);

        ds_prod.SetColumn(nRow,"color_cd",null);
        
        if(varNewValue == "9"){
			
			grd_prod.SetCellPos(4);
        }else{
			grd_prod.SetCellPos(6);
        }
        
    }else if (strColumnID == "in_qty"){
    
		ds_prod.SetColumn(nRow,"out_qty",ds_prod.GetColumn(nRow,"in_qty"));
		
    }else if (strColumnID == "unit_prc"){		
		
		if(ds_prod.GetColumn(nRow,"prod_cl") == "9"){
		
			var iUnitPrc = 0;
			var iAmt = 0;
			var iOutQty = 0;
			
			iUnitPrc = toNumber(varNewValue);
			iOutQty  = toNumber(ds_prod.GetColumn(nRow,"out_qty"));
			iAmt     = iUnitPrc * iOutQty;
			
			ds_prod.SetColumn(nRow,"amt",iAmt);
		}
    }
}

/*******************************************************************************
 * @description    : 상품 정보 조회
*******************************************************************************/
function f_getProdList()
{
    // 입력 파라메터 셋팅
    ds_in.Clear();
    ds_prodInfo.Clear();
    cf_setParam(ds_in, "prod_cd", ds_prod.GetColumn(ds_prod.currow, "prod_cd"));
    cf_setParam(ds_in, "color_cd", ds_prod.GetColumn(ds_prod.currow, "color_cd"));
    cf_setParam(ds_in, "ser_num", ds_prod.GetColumn(ds_prod.currow, "ser_num"));
    cf_setParam(ds_in, "out_plc_id", parent.div_process.edt_outPlcID.Value);
    cf_setParam(ds_in, "in_out_cl", FV_IN_OUT_CL);
    cf_setParam(ds_in, "aply_dt", FV_APPLY_DT);

	// 트랜잭션 설정
	var sSvcID = "svcProdList";
	var sInDs = "nc_input_fieldDs=ds_in";
	var sOutDs = "ds_disProdList=DisProdList";
	var sArg = "sktst.dis.DCO#getDisProdList";
	
	// 공통 트랜잭션 호출
	cf_Transaction(sSvcID, sInDs, sOutDs, sArg);
}

function grd_prod_OnChar(obj,strPreText,nChar,strPostText,nLLParam,nHLParam,nRow,nCell,nPivotIndex)
{
	if (nCell == 9){
	
		var iOutQty = 0; // 입력 재고 수량
		var iInQty  = 0; // 현재 재고 수량
		
		iOutQty = toNumber(strPostText);
		iInQty  = toNumber(ds_prod.GetColumn(nRow,"in_qty"));

		if(iOutQty > iInQty){
		
			alert(" 현재 재고 수량 ["+iInQty+"개] 이상 등록 할 수 없습니다.");		
			ds_prod.row = nRow;
			
			grd_prod.SetCellPos(9);
			grd_prod.Setfocus();
			
			ds_prod.SetColumn(nRow,"out_qty",null);
				
			return;
		}						

		// 기타상품의 금액 계산.
		var iUnitPrc = 0;
		var iAmt = 0;
		var iOutQty = 0;
		
		iUnitPrc = toNumber(ds_prod.GetColumn(nRow,"unit_prc"));
		iOutQty  = toNumber(strPostText);
		iAmt     = iUnitPrc * iOutQty;
		
		ds_prod.SetColumn(nRow,"amt",iAmt);			
    }	
}

/*******************************************************************************
 * @description    : 바코드 정보 조회
*******************************************************************************/
function f_getBarList()
{
    // 입력 파라메터 셋팅
    ds_in.Clear();
    ds_barList.Clear();
    cf_setParam(ds_in, "all_len_num", Length(ds_prod.GetColumn(ds_prod.currow, "ser_num")));
    cf_setParam(ds_in, "prod_cl", ds_prod.GetColumn(ds_prod.currow, "prod_cl"));
    cf_setParam(ds_in, "bar_cd_typ", ds_prod.GetColumn(ds_prod.currow, "bar_cd_typ"));
  
	// 트랜잭션 설정
	var sSvcID = "svcBarList";
	var sInDs = "nc_input_fieldDs=ds_in";
	var sOutDs = "ds_barList=BarList";
	var sArg = "sktst.dis.DTR#getBarList";
	
	// 공통 트랜잭션 호출
	cf_Transaction(sSvcID, sInDs, sOutDs, sArg);
}

/*******************************************************************************
 * @description    : 바코드 정보 셋팅
*******************************************************************************/
function f_setBarInfo()
{      			
    var sProdCl = ds_barInfo.GetColumn(0, "prod_cl");
    var sBarCdTyp = ds_barInfo.GetColumn(0, "bar_cd_typ");
    
    
    // 입력 파라메터 셋팅
    ds_in.Clear();
    ds_barInfo.Clear();
    cf_setParam(ds_in, "prod_cl", sProdCl);
    cf_setParam(ds_in, "bar_cd_typ", sBarCdTyp);
    cf_setParam(ds_in, "ser_num", ds_prod.GetColumn(ds_prod.currow, "ser_num"));
  
	// 트랜잭션 설정
	var sSvcID = "svcBarDataSet";
	var sInDs = "nc_input_fieldDs=ds_in";
	var sOutDs = "ds_barInfo=nc_output_fieldDs";
	var sArg = "sktst.dis.DCO#getBarCodeOutInfo";
	
	// 공통 트랜잭션 호출
	cf_Transaction(sSvcID, sInDs, sOutDs, sArg);
}

function grd_prod_OnHeadClick(obj,nCell,nX,nY,nPivotIndex)
{
	
}
]]></Script>
</Window>